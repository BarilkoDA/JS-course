Функция это наши действия в JS
Они используют различные типы данных и изменяют информацию как мы им укажем.

function func_name(func_arg) {
    action;
}

function showFirstMessage() {
    console.log("Hello World!");
}

showFirstMessage();

Функция для работы должна быть запущена/вызвана.
(Негласное правило)Имя функции должно быть глаголом с припиской того над чем выполняется действие.

Анонимные функции - вызываются здесь и сейчас один раз.
К анонимной функции не возможно обратиться.

Использование аргумента

function showFirstMessage(text) {
    console.log(text);
}

showFirstMessage("Hello World!");

Аргументов может быть бесконечное количество.

Переменные объявленная внутри функии не видна снаружи. 
Переменная созданная внутри функции называется локальной.
Внутри функции можно использовать глобальные переменны

Замыкание функции это сама функция вместе со всеми внешними переменными которые ей доступны.

Функция может прекратить работу и вернуть значение по ключевому слову return.

function calc(a, b) {
    return (a + b);
}

return () - позволяет вернуть значени из () во внешний мир.

Код после return никогда не будет выполнен. Данный код называется анричебл.

Существует 3 типа объявления функций

- Function declaration
Создается до начала выполнения скриптаб можно вызвать перед объявлением.

function foo(){
    код
}

Вызов производится через имя функции
foo();

- Function expression
Создается только тогда, когда доходит поток кода, можно вызвать только после объявления.
Создается переменная внутри которой помещается функуия.

let logger = function(){
    код
};

Вызов производится через имя переменной
logger();

- Стрелочные функции
Не имеет своего контекста (this)

()=>

const calc = (a, b) => a + b; - сокращенный вариант.

const calc = (a, b) => { return a + b }; 

Главная особенность Не имеет своего контента вызова