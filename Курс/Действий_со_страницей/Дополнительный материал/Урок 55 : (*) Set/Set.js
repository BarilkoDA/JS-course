// Структура Set - набора данных

/*
Это особый вид коллекции где каждое значение коллекции может повторяться всего один раз.
*/

/* const arr = [1, 1, 2, 2, 4, 5, 6, 5];

const set = new Set(arr);

console.log(set); */

const arr = ['Alex', 'Anna', 'Oleg', 'Alex'];

const set = new Set(arr);

console.log(set);

// Методы сэта

//1) .add() - добавление в сэт нового значения.

set.add('Ivan'); // добавление в сэт нового значения.
set.add('Oleg'); // При попытке внести существующее значение ничего происходить не будет.

//Команда add возвражает сам набор поэтому мы можем делать следующие действия.

set.add('Ivan')
   .add('Oleg');

//2) .delete() - удалить какое либо значение из набора данных
//3) .has() -  проверить наличие значения в наборе данных
//4) .clear() - очистить набор данных
//5) .size; - получить размер набора данных

// Для перебора набора данных существует 2 подхода

//1) for of
/* for (let value of set) {

} */

//2) forEach
/* set.forEach((value, valueAgain, set) => {
    console.log(value, valueAgain);
}); */

//Методы set (реализованы для обратной совместимости с map))

//1) .values(); - получение значений
//2) .keys();  - получение значений
//3) .entries();

// Вариант быстрой фильтрации

function unique(arr) {
    return Array.from(new Set(arr));
}